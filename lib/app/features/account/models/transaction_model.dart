// Generated by Dart Safe Data Class Generator. * Change this header on extension settings *
// ignore_for_file: type=lint
import 'dart:convert';


class TransactionModel {
  final String id;
  final String type;
  final double value;
  final String? description;
  final DateTime createdAt;
  const TransactionModel({
    this.id = '',
    this.type = '',
    this.value = 0.0,
    this.description,
    required this.createdAt,
  });

  TransactionModel copyWith({
    String? id,
    String? type,
    double? value,
    String? description,
    DateTime? createdAt,
  }) {
    return TransactionModel(
      id: id ?? this.id,
      type: type ?? this.type,
      value: value ?? this.value,
      description: description ?? this.description,
      createdAt: createdAt ?? this.createdAt,
    );
  }

  Map<String, dynamic> toMap() {
    return {
      'id': id,
      'type': type,
      'value': value,
      'description': description,
      'createdAt': createdAt.toUtc().toIso8601String(),
    };
  }

  factory TransactionModel.fromMap(Map<String, dynamic> map) {
     T cast<T>(String k) => map[k] is T ? map[k] as T : throw ArgumentError.value(map[k], k, '$T ‚Üê ${map[k].runtimeType}');
    return TransactionModel(
      id: cast<String>('id'),
      type: cast<String>('type'),
      value: cast<num>('value').toDouble(),
      description: cast<String>('description'),
      createdAt: DateTime.parse(cast<String>('createdAt')),
    );
  }

  String toJson() => json.encode(toMap());

  factory TransactionModel.fromJson(String source) => TransactionModel.fromMap(json.decode(source) as Map<String, dynamic>);

  @override
  String toString() {
    return 'TransactionModel(id: $id, type: $type, value: $value, description: $description, createdAt: $createdAt)';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
  
    return other is TransactionModel &&
      other.id == id &&
      other.type == type &&
      other.value == value &&
      other.description == description &&
      other.createdAt == createdAt;
  }

  @override
  int get hashCode {
    return id.hashCode ^
      type.hashCode ^
      value.hashCode ^
      description.hashCode ^
      createdAt.hashCode;
  }
}
