// Generated by Dart Safe Data Class Generator. * Change this header on extension settings *
// ignore_for_file: type=lint
import 'dart:convert';

class AccountBalanceDto {
  final int bankNumber;
  final int agencyNumber;
  final String accountNumber;

  const AccountBalanceDto({
    this.bankNumber = 0,
    this.agencyNumber = 0,
    this.accountNumber = '',
  });

  AccountBalanceDto copyWith({
    int? bankNumber,
    int? agencyNumber,
    String? accountNumber,
  }) {
    return AccountBalanceDto(
      bankNumber: bankNumber ?? this.bankNumber,
      agencyNumber: agencyNumber ?? this.agencyNumber,
      accountNumber: accountNumber ?? this.accountNumber,
    );
  }

  Map<String, dynamic> toMap() {
    return {
      'bankNumber': bankNumber,
      'agencyNumber': agencyNumber,
      'accountNumber': accountNumber,
    };
  }

  factory AccountBalanceDto.fromMap(Map<String, dynamic> map) {
    T cast<T>(String k) => map[k] is T
        ? map[k] as T
        : throw ArgumentError.value(map[k], k, '$T ‚Üê ${map[k].runtimeType}');
    return AccountBalanceDto(
      bankNumber: cast<num>('bankNumber').toInt(),
      agencyNumber: cast<num>('agencyNumber').toInt(),
      accountNumber: cast<String>('accountNumber'),
    );
  }

  String toJson() => json.encode(toMap());

  factory AccountBalanceDto.fromJson(String source) =>
      AccountBalanceDto.fromMap(json.decode(source) as Map<String, dynamic>);

  @override
  String toString() =>
      'AccountBalanceDto(bankNumber: $bankNumber, agencyNumber: $agencyNumber, accountNumber: $accountNumber)';

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;

    return other is AccountBalanceDto &&
        other.bankNumber == bankNumber &&
        other.agencyNumber == agencyNumber &&
        other.accountNumber == accountNumber;
  }

  @override
  int get hashCode =>
      bankNumber.hashCode ^ agencyNumber.hashCode ^ accountNumber.hashCode;
}
