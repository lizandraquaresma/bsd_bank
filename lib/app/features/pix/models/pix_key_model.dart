// Generated by Dart Safe Data Class Generator. * Change this header on extension settings *
// ignore_for_file: type=lint
import 'dart:convert';

class PixKeyModel {
  final String key;
  final int type;
  const PixKeyModel({
    this.key = '',
    this.type = 0,
  });

  PixKeyModel copyWith({
    String? key,
    int? type,
  }) {
    return PixKeyModel(
      key: key ?? this.key,
      type: type ?? this.type,
    );
  }

  Map<String, dynamic> toMap() {
    return {
      'key': key,
      'type': type,
    };
  }

  factory PixKeyModel.fromMap(Map<String, dynamic> map) {
    T cast<T>(String k) => map[k] is T
        ? map[k] as T
        : throw ArgumentError.value(map[k], k, '$T ‚Üê ${map[k].runtimeType}');
    return PixKeyModel(
      key: cast<String>('key'),
      type: cast<num>('type').toInt(),
    );
  }

  String toJson() => json.encode(toMap());

  factory PixKeyModel.fromJson(String source) =>
      PixKeyModel.fromMap(json.decode(source) as Map<String, dynamic>);

  @override
  String toString() => 'PixKeysModel(key: $key, type: $type)';

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;

    return other is PixKeyModel && other.key == key && other.type == type;
  }

  @override
  int get hashCode => key.hashCode ^ type.hashCode;
}

enum PixKeyType {
  cpf(0),
  cnpj(1),
  phone(2),
  email(3),
  randomKey(4);

  final int value;

  const PixKeyType(this.value);

  static PixKeyType fromValue(int value) {
    return PixKeyType.values.firstWhere((e) => e.value == value,
        orElse: () => PixKeyType.randomKey);
  }
}
