// Generated by Dart Safe Data Class Generator. * Change this header on extension settings *
// ignore_for_file: type=lint
import 'package:flutter/material.dart';
import 'package:go_router/go_router.dart';
import 'package:provide_it/provide_it.dart';

import '../view_models/user_view_model.dart';

class HomePage extends StatelessWidget {
  const HomePage({super.key});

  static const name = 'home';
  static void go(BuildContext context) => context.goNamed(name);

  @override
  Widget build(BuildContext context) {
    final user = context.watch<UserViewModel>().user;
    final texts = Theme.of(context).textTheme;

    return Scaffold(
      appBar: AppBar(
        title: Text(
          user.name,
          style: texts.titleSmall,
        ),
        leading: CircleAvatar(
          radius: 8,
          child: Image.network(
            'https://cdn-icons-png.flaticon.com/512/149/149071.png',
            fit: BoxFit.cover,
          ),
        ),
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16),
        child: Column(
          children: [
            Container(
              child: Column(
                spacing: 8,
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  const Text('Saldo:'),
                  BalanceAccountWidget(texts: texts),
                ],
              ),
            ),
            const Text('Ol√°'),
            Text(user.name),
          ],
        ),
      ),
    );
  }
}

class BalanceAccountWidget extends StatefulWidget {
  const BalanceAccountWidget({
    Key? key,
    required this.texts,
  }) : super(key: key);

  final TextTheme texts;

  @override
  State<BalanceAccountWidget> createState() => _BalanceAccountWidgetState();
}

class _BalanceAccountWidgetState extends State<BalanceAccountWidget> {
  bool isObscured = true;

  void toggleObscured() {
    setState(() {
      isObscured = !isObscured;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Row(
      spacing: 8,
      children: [
        Container(
          height: 48,
          width: 2,
          decoration: BoxDecoration(
            color: Colors.blue,
            borderRadius: BorderRadius.circular(8),
          ),
        ),
        Flexible(
          child: TextFormField(
            decoration: InputDecoration(
              prefixText: r'R$',
              constraints: const BoxConstraints(
                minHeight: 50,
              ),
            ),
            obscureText: isObscured,
            readOnly: true,
            initialValue: '1.000,00',
          ),
        ),
        const Spacer(),
        IconButton(
          onPressed: toggleObscured,
          icon: Icon(
            isObscured ? Icons.visibility_off : Icons.visibility,
          ),
        ),
      ],
    );
  }
}
