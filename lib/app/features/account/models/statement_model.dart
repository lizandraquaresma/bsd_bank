// Generated by Dart Safe Data Class Generator. * Change this header on extension settings *
// ignore_for_file: type=lint
import 'dart:convert';

import 'package:flutter/foundation.dart';

import 'transaction_model.dart';


class StatementModel {
  final int agencyNumber;
  final String accountNumber;
  final String cpf;
  final String name;
  final double balance;
  final double currentBalance;
  final List<TransactionModel> transactions;
  final String correlationId;
  const StatementModel({
    this.agencyNumber = 0,
    this.accountNumber = '',
    this.cpf = '',
    this.name = '',
    this.balance = 0.0,
    this.currentBalance = 0.0,
    this.transactions = const [],
    this.correlationId = '',
  });

  StatementModel copyWith({
    int? agencyNumber,
    String? accountNumber,
    String? cpf,
    String? name,
    double? balance,
    double? currentBalance,
    List<TransactionModel>? transactions,
    String? correlationId,
  }) {
    return StatementModel(
      agencyNumber: agencyNumber ?? this.agencyNumber,
      accountNumber: accountNumber ?? this.accountNumber,
      cpf: cpf ?? this.cpf,
      name: name ?? this.name,
      balance: balance ?? this.balance,
      currentBalance: currentBalance ?? this.currentBalance,
      transactions: transactions ?? this.transactions,
      correlationId: correlationId ?? this.correlationId,
    );
  }

  Map<String, dynamic> toMap() {
    return {
      'agencyNumber': agencyNumber,
      'accountNumber': accountNumber,
      'cpf': cpf,
      'name': name,
      'balance': balance,
      'currentBalance': currentBalance,
      'transactions': transactions.map((x) => x.toMap()).toList(),
      'correlationId': correlationId,
    };
  }

  factory StatementModel.fromMap(Map<String, dynamic> map) {
     T cast<T>(String k) => map[k] is T ? map[k] as T : throw ArgumentError.value(map[k], k, '$T ‚Üê ${map[k].runtimeType}');
    return StatementModel(
      agencyNumber: cast<num>('agencyNumber').toInt(),
      accountNumber: cast<String>('accountNumber'),
      cpf: cast<String>('cpf'),
      name: cast<String>('name'),
      balance: cast<num>('balance').toDouble(),
      currentBalance: cast<num>('currentBalance').toDouble(),
      transactions: List<TransactionModel>.from(cast<Iterable>('transactions').map((x) => TransactionModel.fromMap(Map.from(x as Map)))),
      correlationId: cast<String>('correlationId'),
    );
  }

  String toJson() => json.encode(toMap());

  factory StatementModel.fromJson(String source) => StatementModel.fromMap(json.decode(source) as Map<String, dynamic>);

  @override
  String toString() {
    return 'StatementModel(agencyNumber: $agencyNumber, accountNumber: $accountNumber, cpf: $cpf, name: $name, balance: $balance, currentBalance: $currentBalance, transactions: $transactions, correlationId: $correlationId)';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
  
    return other is StatementModel &&
      other.agencyNumber == agencyNumber &&
      other.accountNumber == accountNumber &&
      other.cpf == cpf &&
      other.name == name &&
      other.balance == balance &&
      other.currentBalance == currentBalance &&
      listEquals(other.transactions, transactions) &&
      other.correlationId == correlationId;
  }

  @override
  int get hashCode {
    return agencyNumber.hashCode ^
      accountNumber.hashCode ^
      cpf.hashCode ^
      name.hashCode ^
      balance.hashCode ^
      currentBalance.hashCode ^
      transactions.hashCode ^
      correlationId.hashCode;
  }
}
