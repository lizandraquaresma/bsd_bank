
// {
//   "sourceBankNumber": 0,
//   "sourceAgencyNumber": 0,
//   "sourceAccountNumber": "string",
//   "account2": {
//     "bankNumber": 0,
//     "agencyNumber": 0,
//     "accountNumber": "string",
//     "cpf": "string",
//     "pixKeys": [
//       {
//         "key": "string",
//         "type": 0
//       }
//     ]
//   },
//   "amount": 0,
//   "description": "string"
// }

// Generated by Dart Safe Data Class Generator. * Change this header on extension settings *
// ignore_for_file: type=lint
import 'dart:convert';

import '../../account/models/account_model.dart';

class PixModel {
  final int sourceBankNumber;
  final int sourceAgencyNumber;
  final String sourceAccountNumber;
  final AccountModel account2;
  final double amount;
  final String description;
  const PixModel({
    this.sourceBankNumber = 0,
    this.sourceAgencyNumber = 0,
    this.sourceAccountNumber = '',
    required this.account2,
    this.amount = 0.0,
    this.description = '',
  });

  PixModel copyWith({
    int? sourceBankNumber,
    int? sourceAgencyNumber,
    String? sourceAccountNumber,
    AccountModel? account2,
    double? amount,
    String? description,
  }) {
    return PixModel(
      sourceBankNumber: sourceBankNumber ?? this.sourceBankNumber,
      sourceAgencyNumber: sourceAgencyNumber ?? this.sourceAgencyNumber,
      sourceAccountNumber: sourceAccountNumber ?? this.sourceAccountNumber,
      account2: account2 ?? this.account2,
      amount: amount ?? this.amount,
      description: description ?? this.description,
    );
  }

  Map<String, dynamic> toMap() {
    return {
      'sourceBankNumber': sourceBankNumber,
      'sourceAgencyNumber': sourceAgencyNumber,
      'sourceAccountNumber': sourceAccountNumber,
      'account2': account2.toMap(),
      'amount': amount,
      'description': description,
    };
  }

  factory PixModel.fromMap(Map<String, dynamic> map) {
     T cast<T>(String k) => map[k] is T ? map[k] as T : throw ArgumentError.value(map[k], k, '$T ‚Üê ${map[k].runtimeType}');
    return PixModel(
      sourceBankNumber: cast<num>('sourceBankNumber').toInt(),
      sourceAgencyNumber: cast<num>('sourceAgencyNumber').toInt(),
      sourceAccountNumber: cast<String>('sourceAccountNumber'),
      account2: AccountModel.fromMap(Map.from(cast<Map>('account2'))),
      amount: cast<num>('amount').toDouble(),
      description: cast<String>('description'),
    );
  }

  String toJson() => json.encode(toMap());

  factory PixModel.fromJson(String source) => PixModel.fromMap(json.decode(source) as Map<String, dynamic>);

  @override
  String toString() {
    return 'PixModel(sourceBankNumber: $sourceBankNumber, sourceAgencyNumber: $sourceAgencyNumber, sourceAccountNumber: $sourceAccountNumber, account2: $account2, amount: $amount, description: $description)';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
  
    return other is PixModel &&
      other.sourceBankNumber == sourceBankNumber &&
      other.sourceAgencyNumber == sourceAgencyNumber &&
      other.sourceAccountNumber == sourceAccountNumber &&
      other.account2 == account2 &&
      other.amount == amount &&
      other.description == description;
  }

  @override
  int get hashCode {
    return sourceBankNumber.hashCode ^
      sourceAgencyNumber.hashCode ^
      sourceAccountNumber.hashCode ^
      account2.hashCode ^
      amount.hashCode ^
      description.hashCode;
  }
}
