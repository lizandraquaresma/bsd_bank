// Generated by Dart Safe Data Class Generator. * Change this header on extension settings *
// ignore_for_file: type=lint
import 'dart:convert';

import 'package:flutter/foundation.dart';

@immutable
class LoginDto {
  const LoginDto({
    this.cpf = '',
    this.password = '',
  });

  final String cpf;
  final String password;

  LoginDto copyWith({
    String? cpf,
    String? password,
  }) {
    return LoginDto(
      cpf: cpf ?? this.cpf,
      password: password ?? this.password,
    );
  }

  Map<String, dynamic> toMap() {
    return {
      'cpf': cpf,
      'password': password,
    };
  }

  factory LoginDto.fromMap(Map<String, dynamic> map) {
     T cast<T>(String k) => map[k] is T ? map[k] as T : throw ArgumentError.value(map[k], k, '$T ‚Üê ${map[k].runtimeType}');
    return LoginDto(
      cpf: cast<String>('cpf'),
      password: cast<String>('password'),
    );
  }

  String toJson() => json.encode(toMap());

  factory LoginDto.fromJson(String source) =>
      LoginDto.fromMap(json.decode(source) as Map<String, dynamic>);

  @override
  String toString() =>
   'LoginDto(cpf: $cpf, password: $password)';

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;

    return other is LoginDto &&
        other.cpf == cpf &&
        other.password == password;
  }

  @override
  int get hashCode => cpf.hashCode ^ password.hashCode;
}
